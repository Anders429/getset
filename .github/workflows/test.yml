name: Test

on:
  push:

env:
  RUSTFLAGS: "--deny=warnings"

jobs:
  mac:
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v1
    <<: *cache
    - name: Install Rust toolchain
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
    - name: Test
      uses: actions-rs/cargo@v1
      with:
        command: test
        args: -- --nocapture

  windows:
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v1
    <<: *cache
    - name: Install Rust toolchain
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
    - name: Test
      uses: actions-rs/cargo@v1
      with:
        command: test
        args: -- --nocapture

  ubuntu-stable:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1
    <<: *cache
    - name: Install Rust toolchain
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
    - name: Test
      uses: actions-rs/cargo@v1
      with:
        command: test
        args: -- --nocapture
  
  ubuntu-beta:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1
    <<: *cache
    - name: Install Rust toolchain
      uses: actions-rs/toolchain@v1
      with:
        toolchain: beta
    - name: Test
      uses: actions-rs/cargo@v1
      with:
        command: test
        args: -- --nocapture

  ubuntu-nightly:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1
    <<: *cache
    - name: Install Rust toolchain
      uses: actions-rs/toolchain@v1
      with:
        toolchain: nightly
    - name: Test
      uses: actions-rs/cargo@v1
      with:
        command: test
        args: -- --nocapture

  clippy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      <<: *cache
      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
      - run: rustup component add clippy
      - uses: actions-rs/clippy-check@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

  format:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      <<: *cache
      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
      - run: rustup component add rustfmt
      - uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: -- --check

  coverage:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      <<: *cache
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          override: true
      - uses: actions-rs/cargo@v1
        with:
          command: clean
      - uses: actions-rs/cargo@v1
        with:
          command: test
          args: --all-features --no-fail-fast
        env:
          'CARGO_INCREMENTAL': '0'
          'RUSTFLAGS': '-Zprofile -Ccodegen-units=1 -Cinline-threshold=0 -Clink-dead-code -Coverflow-checks=off -Zno-landing-pads'
      - uses: actions-rs/grcov@v0.1
      - name: Coveralls upload
        uses: coverallsapp/github-action@master
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          path-to-lcov: /tmp/lcov.info

x-cache: &cache
  - name: Cache .rustup
    id: cache-rustup
    uses: actions/cache@v1
    with:
      path: ~/.rustup
      key: ${{ runner.os }}-rustup
  - name: Cache cargo registry
    uses: actions/cache@v1
    with:
      path: ~/.cargo/registry
      key: ${{ runner.os }}-cargo-registry-${{ hashFiles('**/Cargo.toml') }}
  - name: Cache cargo index
    uses: actions/cache@v1
    with:
      path: ~/.cargo/git
      key: ${{ runner.os }}-cargo-index-${{ hashFiles('**/Cargo.toml') }}
  - name: Cache target
    id: cache-target
    uses: actions/cache@v1
    with:
      path: target
      key: ${{ runner.os }}-target-${{ hashFiles('**/Cargo.toml') }}